{"version":3,"file":"commonHelpers.js","sources":["../src/js/spinner.js","../src/js/refs.js","../src/js/createMarkUp.js","../src/main.js"],"sourcesContent":["import { Spinner } from 'spin.js';\nconst spinnerContainer = document.querySelector('.js-backdrop');\n\nconst opts = {\n  lines: 8, // The number of lines to draw\n  length: 33, // The length of each line\n  width: 4, // The line thickness\n  radius: 26, // The radius of the inner circle\n  scale: 0.6, // Scales overall size of the spinner\n  corners: 0.5, // Corner roundness (0..1)\n  speed: 1.6, // Rounds per second\n  rotate: 0, // The rotation offset\n  animation: 'spinner-line-fade-quick', // The CSS animation name for the lines\n  direction: 1, // 1: clockwise, -1: counterclockwise\n  color: '#ffffff', // CSS color or array of colors\n  fadeColor: 'transparent', // CSS color or array of colors\n  top: '49%', // Top position relative to parent\n  left: '50%', // Left position relative to parent\n  shadow: '0 0 1px transparent', // Box-shadow for the lines\n  zIndex: 2000000000, // The z-index (defaults to 2e9)\n  className: 'spinner', // The CSS class to assign to the spinner\n  position: 'absolute', // Element positioning\n};\n\nconst spinner = new Spinner(opts);\n\nexport const spinnerPlay = () => {\n  spinnerContainer.classList.remove('is-hidden');\n  spinner.spin(spinnerContainer);\n};\n\nexport const spinnerStop = () => {\n  spinnerContainer.classList.add('is-hidden');\n  spinner.stop();\n};\n","export const imgContainer = document.querySelector('.img-container');\nexport const BASE_URL = 'https://pixabay.com/api/';\nexport const API_KEY = '41741201-12a642cf53882fe64e8e82723';\nexport const formEl = document.querySelector('.search-form');","export const createMarkUp = array => {\n  return array.map(\n    image => `<div class=\"img-item\">\n      <a href=\"${image.webformatURL}\" class=\"lightbox-link\">\n        <img src=\"${image.webformatURL}\" alt=\"${image.tags}\">\n      </a>\n      <div class=\"image-info\">\n        <p>Likes: ${image.likes}</p>\n        <p>Views: ${image.views}</p>\n        <p>Comments: ${image.comments}</p>\n        <p>Downloads: ${image.downloads}</p>\n      </div>\n    </div>`\n  ).join('');\n};\n","import axios from 'axios';\n// import iziToast from 'izitoast';\n// import 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport { spinnerPlay, spinnerStop } from './js/spinner';\nimport { imgContainer, formEl } from './js/refs';\nimport { createMarkUp } from './js/createMarkUp';\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '41741201-12a642cf53882fe64e8e82723';\n\nconst searchImages = async query => {\n  try {\n    const response = await axios.get(BASE_URL, {\n      params: {\n        key: API_KEY,\n        q: query,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n      },\n    });\n\n    // if (response.data.total === 0) {\n    //   iziToast.info({\n    //     position: 'center',\n    //     message: 'Sorry, there are no images matching your search query. Please try again!',\n    //   });\n    // }\n\n    return response.data;\n  } catch (error) {\n    console.error('Error during image search:', error);\n    throw new Error('Failed to retrieve images');\n  }\n};\n\nconst handleSubmit = async event => {\n  event.preventDefault();\n  spinnerPlay();\n\n  const searchQuery = event.currentTarget.elements.query.value.trim();\n  imgContainer.innerHTML = '';\n\n  if (searchQuery !== '') {\n    try {\n      const data = await searchImages(searchQuery);\n      imgContainer.innerHTML = createMarkUp(data.hits);\n      const lightbox = new SimpleLightbox('.lightbox-link');\n      lightbox.refresh();\n    } catch (error) {\n      // iziToast.error({\n      //   position: 'center',\n      //   message: 'An error occurred while retrieving images. Please try again later.',\n      // });\n      console.error('Error during search:', error);\n    } finally {\n      spinnerStop();\n    }\n  } else {\n    spinnerStop();\n    // iziToast.warning({\n    //   position: 'center',\n    //   message: 'Please enter a search query.',\n    // });\n  }\n};\n\nformEl.addEventListener('submit', handleSubmit);\n"],"names":["spinnerContainer","opts","spinner","Spinner","spinnerPlay","spinnerStop","imgContainer","formEl","createMarkUp","array","image","BASE_URL","API_KEY","searchImages","query","axios","error","handleSubmit","event","searchQuery","data","SimpleLightbox"],"mappings":"owBACA,MAAMA,EAAmB,SAAS,cAAc,cAAc,EAExDC,EAAO,CACX,MAAO,EACP,OAAQ,GACR,MAAO,EACP,OAAQ,GACR,MAAO,GACP,QAAS,GACT,MAAO,IACP,OAAQ,EACR,UAAW,0BACX,UAAW,EACX,MAAO,UACP,UAAW,cACX,IAAK,MACL,KAAM,MACN,OAAQ,sBACR,OAAQ,IACR,UAAW,UACX,SAAU,UACZ,EAEMC,EAAU,IAAIC,EAAQF,CAAI,EAEnBG,EAAc,IAAM,CAC/BJ,EAAiB,UAAU,OAAO,WAAW,EAC7CE,EAAQ,KAAKF,CAAgB,CAC/B,EAEaK,EAAc,IAAM,CAC/BL,EAAiB,UAAU,IAAI,WAAW,EAC1CE,EAAQ,KAAI,CACd,EClCaI,EAAe,SAAS,cAAc,gBAAgB,EAGtDC,EAAS,SAAS,cAAc,cAAc,ECH9CC,EAAeC,GACnBA,EAAM,IACXC,GAAS;AAAA,iBACIA,EAAM;AAAA,oBACHA,EAAM,sBAAsBA,EAAM;AAAA;AAAA;AAAA,oBAGlCA,EAAM;AAAA,oBACNA,EAAM;AAAA,uBACHA,EAAM;AAAA,wBACLA,EAAM;AAAA;AAAA,WAG9B,EAAI,KAAK,EAAE,ECJLC,EAAW,2BACXC,EAAU,qCAEVC,EAAe,MAAMC,GAAS,CAClC,GAAI,CAkBF,OAjBiB,MAAMC,EAAM,IAAIJ,EAAU,CACzC,OAAQ,CACN,IAAKC,EACL,EAAGE,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACb,CACP,CAAK,GASe,IACjB,OAAQE,EAAP,CACA,cAAQ,MAAM,6BAA8BA,CAAK,EAC3C,IAAI,MAAM,2BAA2B,CAC5C,CACH,EAEMC,EAAe,MAAMC,GAAS,CAClCA,EAAM,eAAc,EACpBd,IAEA,MAAMe,EAAcD,EAAM,cAAc,SAAS,MAAM,MAAM,OAG7D,GAFAZ,EAAa,UAAY,GAErBa,IAAgB,GAClB,GAAI,CACF,MAAMC,EAAO,MAAMP,EAAaM,CAAW,EAC3Cb,EAAa,UAAYE,EAAaY,EAAK,IAAI,EAC9B,IAAIC,EAAe,gBAAgB,EAC3C,QAAO,CACjB,OAAQL,EAAP,CAKA,QAAQ,MAAM,uBAAwBA,CAAK,CACjD,QAAc,CACRX,GACD,MAEDA,GAMJ,EAEAE,EAAO,iBAAiB,SAAUU,CAAY"}